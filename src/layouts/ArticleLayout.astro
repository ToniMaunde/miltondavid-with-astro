---
import { getCollection } from "astro:content";
import { format } from "date-fns";
import type { MarkdownLayoutProps } from "astro";
import Layout from "../layouts/Layout.astro";
import TableOfContents from "../components/articles/TableOfContents.astro";
import ShareArticle from "../components/articles/ShareArticle.astro";
import RelatedArticles from "../components/articles/RelatedArticles.astro";
import arrowLeft from "../icons/arrow_left.svg";

type Props = MarkdownLayoutProps<{
  title: string;
  description: string;
  createdAt: string;
  updatedAt: string;
  isDraft: boolean;
  topics: Array<string>;
}>;

function slugify(title: string) {
  return title.toLowerCase().replaceAll(".", "").split(" ").join("-");
}

function articleDate(createdAt: string, updatedAt: string, isDraft: boolean) {
  const datePattern = "MMM dd yyyy";

  if (isDraft) {
    return `Started on ${format(new Date(createdAt), datePattern)}`;
  } else {
    if (createdAt === updatedAt) {
      return format(new Date(createdAt), datePattern);
    }
    return `Updated on ${format(new Date(updatedAt), datePattern)}`;
  }
}

const { frontmatter, headings } = Astro.props;
const { href } = Astro.url;

const listOfArticles = await getCollection("articles");
const relatedArticles = listOfArticles
  .filter((article) => article.data.title != frontmatter.title)
  .filter((article) => article.data.isDraft != true)
  .filter(
    (article) =>
      article.data.topics.filter((topic) => frontmatter.topics.includes(topic))
        .length > 0
  );

const GITHUB_CONTENT_URL =
  "https://github.com/ToniMaunde/miltondavid-with-astro/tree/main/src/content/articles";
const ARTICLE_SLUG = slugify(frontmatter.title);
---

<Layout
  title={frontmatter.title + " - Milton David"}
  description={frontmatter.description}
  isArticle={true}
>
  <main>
    <a
      href="/"
      class=""
    >
      <img src={arrowLeft.src} class="" />
       Go back
    </a>
    <header class="">
      <h1
        class=""
      >
        {frontmatter.title}
      </h1>
      <p class="">
        {
          articleDate(
            frontmatter.createdAt,
            frontmatter.updatedAt,
            frontmatter.isDraft
          )
        }
      </p>
      <p
        class=""
      >
        {
          frontmatter.topics.map((topic) => (
            <a
              class=""
              href={`/topics/${slugify(topic)}`}
            >
              #{topic}
            </a>
          ))
        }
      </p>
    </header>
    <p
      class=""
    >
      <span class="">Summary:</span>
      {frontmatter.description}
    </p>
    <TableOfContents headings={headings} classes="" />
  </main>
  <article
    class=""
  >
    <slot />
    <hr class="" />
  </article>
  <div class="">
    <p class="">
      Did you find a typo, or would like to contribute to the article? Here's
      the <a
        href={`${GITHUB_CONTENT_URL}/${ARTICLE_SLUG}.mdx`}
        target="_blank"
        rel="noreferrer"
        class=""
      >
        Github Link
      </a> for this article.
    </p>
    <ShareArticle title={frontmatter.title} href={href} />
    {
      relatedArticles.length > 0 && (
        <RelatedArticles list={relatedArticles} classes="" />
      )
    }
  </div>
</Layout>
