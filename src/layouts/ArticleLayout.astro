---
import "../style.css";
import { getCollection } from "astro:content";
import { format } from "date-fns";
import { formatDate } from "../util";
import type { MarkdownLayoutProps } from "astro";
import type { TTwitterMeta } from "../types.ts";
import { ViewTransitions } from "astro:transitions";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import TableOfContents from "../components/articles/TableOfContents.astro";
import ShareArticle from "../components/articles/ShareArticle.astro";
import RelatedArticles from "../components/articles/RelatedArticles.astro";
import arrowLeft from "../icons/arrow_left.svg";

type Props = MarkdownLayoutProps<{
  title: string;
  description: string;
  createdAt: Date;
  updatedAt: Date;
  isDraft: boolean;
  topics: Array<string>;
}>;

function generateTwitterMeta(
  title: string,
  description: string
): Array<TTwitterMeta> {
  return [
    {
      name: "twitter:card",
      content: "summary",
    },
    {
      name: "twitter:site",
      content: "@tonimaunde",
    },
    {
      name: "twitter:creator",
      content: "@tonimaunde",
    },
    {
      name: "twitter:title",
      content: title,
    },
    {
      name: "twitter:description",
      content: description,
    },
  ];
}

function slugify(title: string) {
  return title.toLowerCase().replaceAll(".", "").split(" ").join("-");
}

function articleDate(createdAt: string, updatedAt: string, isDraft: boolean) {
  const datePattern = "MMM dd yyyy";

  if (isDraft) {
    return `Started on ${format(new Date(createdAt), datePattern)}`;
  } else {
    if (createdAt === updatedAt) {
      return format(new Date(createdAt), datePattern);
    }
    return `Updated on ${format(new Date(updatedAt), datePattern)}`;
  }
}

const { frontmatter, headings } = Astro.props;
const { href } = Astro.url;

const listOfArticles = await getCollection("articles");
const relatedArticles = listOfArticles
  .filter((article) => article.data.title != frontmatter.title)
  .filter((article) => article.data.isDraft != true)
  .filter(
    (article) =>
      article.data.topics.filter((topic) => frontmatter.topics.includes(topic))
        .length > 0
  );

const GITHUB_CONTENT_URL =
  "https://github.com/ToniMaunde/miltondavid-with-astro/tree/main/src/content/articles";
const ARTICLE_SLUG = slugify(frontmatter.title);
const umamiSecret: string = import.meta.env.SECRET_UMAMI_ID;

export { umamiSecret };
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={frontmatter.description} />
    {
      generateTwitterMeta(frontmatter.title, frontmatter.description).map(
        (meta) => <meta name={meta.name} content={meta.content} />
      )
    }
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <script
      defer
      src="https://analytics.eu.umami.is/script.js"
      is:inline
      data-website-id={umamiSecret}></script>
    <title>{frontmatter.title} - Milton David</title>
    <ViewTransitions />
  </head>
  <body>
    <Navbar />
    <aside class="region" data-region="article-navigation">
      <a href="/">
        <img src={arrowLeft.src} data-type="icon" />
        <span>Go back</span>
      </a>
    </aside>
    <main class="region" data-region="article">
      <header>
        <h1>{frontmatter.title}</h1>
        <time datetime={formatDate(frontmatter.updatedAt, "yyyy-MM-dd")}>
          {formatDate(frontmatter.updatedAt, "MMM dd yyyy")}
        </time>
        <ul role="list">
          {
            frontmatter.topics.map((topic) => (
              <li>
                <a href={`topics/${topic}`}>
                  #{topic}
                </a>
              </li>
            ))
          }
        </ul>
      </header>
      <article class="region" data-role="summary">
        <p>
          <strong>Summary</strong>:{frontmatter.description}
        </p>
      </article>
      <article>
        <slot />
      </article>
    </main>
    <Footer />
  </body>
</html>
