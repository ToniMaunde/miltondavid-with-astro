---
import type { TArticle } from "../content/config";
import { articleDate, computeReadingTime } from "../util";

interface Props {
  articles: Array<{
    id: string;
    slug: string;
    body: string;
    collection: string;
    data: TArticle;
  }>;
}

const { articles } = Astro.props;
const orderedArticles = articles.sort((prev, next) => {
  const prevTime = new Date(prev.data.updatedAt).getTime();
  const nextTime = new Date(next.data.updatedAt).getTime();
  if (prevTime < nextTime) return 1;
  else if (prevTime > nextTime) return -1;

  return 0;
});
---

<ul class="flex flex-col gap-6">
  {
    orderedArticles.map((article) => (
      <li class="flex flex-col gap-2">
        <a href={`/articles/${article.slug}`}>
          <h3 class="font-overpass-mono text-supporting-gunmetal-600 dark:text-primary-300 text-lg/6">
            {article.data.title}
          </h3>
        </a>
        <p class="font-overpass-medium text-supporting-gunmetal-300 dark:text-neutral-300 text-sm/4">
          {article.data.description}
        </p>
        <p class="text-supporting-gunmetal-100 dark:text-neutral-500 text-xs/4">
          ~{computeReadingTime(article.body)} min read <span>&nbsp‚¶Å&nbsp;</span>{" "}
          {articleDate(article.data.createdAt, article.data.updatedAt)}
        </p>
        <p class="text-supporting-gunmetal-300 dark:text-neutral-300 text-sm/4">
          Topics: {article.data.topics.join(", ")}
        </p>
      </li>
    ))
  }
</ul>
